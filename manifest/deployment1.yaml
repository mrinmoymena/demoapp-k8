---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: asset-service
  labels:
    app: asset-service
    release: "asset-service"
    app.kubernetes.io/name: asset-service
    app.kubernetes.io/instance: "asset-service"
    app.kubernetes.io/part-of: asset-service
spec:
  serviceName: asset-service
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: asset-service
      release: "asset-service"
      role: master
  template:
    metadata:
      name: asset-service
      labels:
        app: asset-service
        release: "asset-service"
        role: master
    spec:
      containers:
      - name: asset-service
        image: 116127484844.dkr.ecr.us-west-2.amazonaws.com/whitelist-configuration-service:20200205155442-master-ec9dc08-86
        imagePullPolicy: "IfNotPresent"
        command: ["/bin/sh"]
        args: ["-c", "./manage.py migrate && uwsgi --ini uwsgi.ini"]
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
        env:
        - name: OIDC_BASE_URL
          value: 'http://keycloak-http.default.svc.cluster.local/auth/realms/master'
        - name: RDS_NAME
          value: "asset_db"
        - name: RDS_USER
          value: "asset"
        - name: RDS_HOST
          value: "asset-service-postgresql"
        - name: RDS_PORT
          value: "5432"
        - name: DJANGO_SETTINGS_MODULE
          value: "asset_service.settings.debug"
        - name: COGNITO_USER_POOL_ID
        - name: AWS_DEFAULT_REGION
          value: "us-west-2"
        - name: AWS_ACCESS_KEY_ID
          value: "fake"
        - name: AWS_SECRET_ACCESS_KEY
          value: "fake"
        - name: WORKSPACE
          value: "local"
        - name: SERVICE_NAME
          value: "asset_service"
        - name: RDS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: asset-service
              key: rdsPassword
        - name: APP_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: asset-service
              key: appClientID
        ports:
        - name: http
          containerPort: 8443
        livenessProbe:
          httpGet:
            path: /
            port: http
            scheme: HTTPS
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        readinessProbe:
          httpGet:
            path: /
            port: http
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6

